#!/usr/bin/env -vS ansible-playbook -vvv -K -i ${PWD}/../../test@local/4docker/ansible-inventories
# code: language=ansible
---

- name: test
  hosts: docker
  tasks:

    - name: playbook var|fact workspace
      include_tasks: "{{ workspace.local }}/seed/ansible-tasks/seed-workspace.fact.yml"

    - name: playbook var|fact workpath
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-workpath.fact.yml"
      vars:
        workpath:
          path: "{{ workspace.local }}/playbook_4"


    - name: playbook var|all host|init var|include vars
      ansible.builtin.include_vars:
        file: include-vars.test4.yml

    - name: playbook var|all host|init var|deploy stack
      include_tasks: docker-stack.test.yml
      vars:
        stack:
          name: "test-deploy-{{ inventory_hostname }}-playbook_4"
          path: "{{ workpath.remote.full }}"
          files:
            - path: "{{ workpath.remote.full }}"
          envs:
            - group: docker-manager
              file: test-deploy-playbook_4.compose.swarm.env
              content: |
                TZ=Asia/Hong_Kong
          composes:
            - group: docker-manager
              file: test-deploy-playbook_4.compose.swarm.yml
              content: |
                version: "3.8"
                services:
                  playbook_4:
                    image: alpine:3.18
                    command: "tail -f /dev/null"
          share:
            mounts:
              group: docker
              mode: value
            files:
              mode: value
            volumes:
              mode: value
            networks:
              mode: value
            envs:
              mode: value
            composes:
              mode: value
          override: "{{ test4 | default({},true) }}"

    - name: playbook var|all host|init var|info service
      when: inventory_hostname in groups['docker-manager']
      community.docker.docker_swarm_service_info:
        name: "test-deploy-{{ inventory_hostname }}-playbook_4_playbook_4"
      register: service_info

    - name: playbook var|all host|init var|assert stack
      when: inventory_hostname in groups['docker-manager']
      ansible.builtin.assert:
        that:
          - service_info.service.Spec.Name is contains(inventory_hostname)
          - service_info.service.Spec.Name is contains('playbook_4')

    - name: playbook var|all host|init var|remove stack
      when: inventory_hostname in groups['docker-manager']
      community.docker.docker_stack:
        state: absent
        name: "test-deploy-{{ inventory_hostname }}-playbook_4"

    - name: playbook var|all host|init var|remove volume
      when: inventory_hostname in groups['docker-manager']
      community.docker.docker_volume:
        state: absent
        name: test-deploy-any-playbook_4
      register: volume_remove
      until: volume_remove is succeeded
      delay: 10
