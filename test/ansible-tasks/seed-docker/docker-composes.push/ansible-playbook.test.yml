#!/usr/bin/env -vS ansible-playbook -vvv -i ${PWD}/../../test@local/4docker/ansible-inventories
# code: language=ansible
---

- name: test
  hosts: docker
  tasks:

    - name: playbook var|index loop|push composes
      include_tasks: docker-composes.test.yml
      vars:
        composes:
          - dest: "{{ workspace.remote }}/test-from-playbook_0.compose.yml"
            content: |
              version: "3.8"
              services:
                playbook_0:
                  image: alpine:3.18
                  command: "tail -f /dev/null"

    - name: playbook var|index loop|assert composes
      ansible.builtin.assert:
        that:
          - test_include_count | int == 1
          - test_append_result | length == 1
          - test_append_result[0].index == '0'

    - name: playbook var|index loop|clean test
      ansible.builtin.set_fact:
        test_include_count: 0
        test_append_result: []


    - name: playbook var|value loop|push composes
      include_tasks: docker-composes.test.yml
      vars:
        composes_share:
          mode: value
          group: docker-34
        composes:
          - once: false
            any: false
            dest: "{{ workspace.remote }}/test-from-playbook_1.compose.yml"
            template: "{{ playbook_dir }}/template/playbook_1.compose.yml"
          - once: false
            any: true
            file: "test-from-playbook_2.compose.yml"
            template: "{{ playbook_dir }}/template/playbook_2.compose.yml.j2"
            vars:
              COMMAND: "echo 'hello any test-from-playbook_2'"
          - once: true
            any: true
            file: "test-from-playbook_3.compose.yml"
            template: "{{ playbook_dir }}/template/playbook_3.compose.yml.j2"
            vars:
              COMMAND: "echo 'hello any test-from-playbook_3'"

    - name: playbook var|value loop|assert composes
      ansible.builtin.assert:
        that:
          - test_include_count | int == (2 + 1 + 1)

    - name: playbook var|value loop|assert composes host node3
      when: inventory_hostname == 'node3'
      ansible.builtin.assert:
        that:
          - test_append_result | length == 3
          - test_append_result[0].share.any == false
          - test_append_result[0].param.template is contains('playbook_1')
          - test_append_result[1].share.any == true
          - test_append_result[1].param.template is contains('playbook_2')
          - test_append_result[2].share.any == true
          - test_append_result[2].param.template is contains('playbook_3')

    - name: playbook var|value loop|assert composes host node4
      when: inventory_hostname == 'node4'
      ansible.builtin.assert:
        that:
          - test_append_result | length == 2
          - test_append_result[0].share.any == true
          - test_append_result[0].param.template is contains('playbook_2')
          - test_append_result[1].share.any == false
          - test_append_result[1].param.template is contains('playbook_1')

    - name: playbook var|value loop|clean test
      ansible.builtin.set_fact:
        test_include_count: 0
        test_append_result: []
