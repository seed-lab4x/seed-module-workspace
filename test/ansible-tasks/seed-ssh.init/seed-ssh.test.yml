#!/usr/bin/env -S ansible-playbook -k -K -i ${PWD}/ansible-inventories
# code: language=ansible
---

- name: seed-ssh.test|fact id
  run_once: true
  delegate_to: localhost
  ansible.builtin.set_fact:
    _ssh:
      id: "{{ lookup('community.general.random_string', upper=false, special=false) }}"

- name: seed-ssh.test|fact param
  vars:
    ssh_optional:
      group: 'ssh'
      dir: "~/.ssh"
      keyscan_types:
        - ssh-rsa
      approve_task: "seed-ssh.approve.yml"
      known_names:
        - "[{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname,true) }}]:{{ hostvars[inventory_hostname].ansible_port | default('22',true) }}"
      known_hash: false
      mark_comment: "{{ _ssh.id }}"
    ssh_param: "{{ ssh_optional | combine(ssh | default({},true), recursive=True) }}"

    parts_keypair_dir:
      - "{{ ssh.dir | default('~/.ssh',true) }}"
      - "{{ ssh.name }}"
    parts_keypair_path:
      - "{{ ssh.dir | default('~/.ssh',true) }}"
      - "{{ ssh.name }}"
      - "id_rsa"
    parts_known_path:
      - "{{ ssh.dir | default('~/.ssh',true) }}"
      - "known_hosts"
    parts_config_path:
      - "{{ ssh.dir | default('~/.ssh',true) }}"
      - "config"
    ssh_required:
      name: "{{ ssh.name }}"
      keypair_dir: "{{ parts_keypair_dir | path_join }}"
      keypair_path: "{{ parts_keypair_path | path_join }}"
      known_path: "{{ ssh.known_path | default(parts_known_path | path_join) }}"
      config_path: "{{ ssh.config_path | default(parts_config_path | path_join) }}"
  ansible.builtin.set_fact:
    _ssh: "{{ ssh_param | combine(ssh_required, recursive=True) }}"

- throttle: 1
  delegate_to: localhost
  block:
  - name: seed-ssh.test|keypair|mkdir
    ansible.builtin.file:
      state: directory
      path: "{{ _ssh.keypair_dir }}"

  - name: seed-ssh.test|keypair|generate rsa 2048
    community.crypto.openssh_keypair:
      path: "{{ _ssh.keypair_path }}"
      size: 2048
      type: rsa
      comment: "{{ _ssh.name }}"
      mode: 0700
    # https://github.com/microsoft/WSL/issues/670
    register: ssh_keypair
    until: ssh_keypair is succeeded

- name: seed-ssh.test|keyscan|fact scan key
  delegate_to: localhost
  vars:
    item_keyscan_port: "{{ hostvars[inventory_hostname].ansible_port | default('22',true) }}"
    item_keyscan_host: "{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname,true) }}"
    item_keyscan_command: "ssh-keyscan -t {{ item_keyscan_type }} -p {{ item_keyscan_port }} {{ item_keyscan_host }}"
    item_keyscan_key: "{{ lookup('pipe', item_keyscan_command, errors='ignore') }}"
  loop: "{{ _ssh.keyscan_types }}"
  loop_control:
    loop_var: item_keyscan_type
  when:
    - item_keyscan_key | default(None,true) != None
  ansible.builtin.set_fact:
    ssh_keyscan: "{{ ssh_keyscan | default([],true) + [item_keyscan_key] }}"

- when: _ssh.known_path | default(None,true) != None
  block:
  - name: seed-ssh.test|known_hosts|mark start
    run_once: true
    delegate_to: localhost
    ansible.builtin.lineinfile:
      path: "{{ _ssh.known_path }}"
      line:  |-

        # seed-ssh.test '{{ _ssh.name }}' {{ _ssh.mark_comment }} start
      create: true

  - name: seed-ssh.test|known_hosts|add key
    throttle: 1
    delegate_to: localhost
    vars:
      list_known_host: "{{ _ssh.known_names
          | product(ssh_keyscan)
          | map('zip', ['name', 'key'])
          | map('map', 'reverse')
          | map('community.general.dict') }}"
      item_known_namedkey: "{{ ([item_known_host.name] + item_known_host.key.split(' ')[1:]) | join(' ') }}"
    loop: "{{ list_known_host }}"
    loop_control:
      loop_var: item_known_host
    ansible.builtin.known_hosts:
      state: present
      path: "{{ _ssh.known_path }}"
      hash_host: "{{ _ssh.known_hash }}"
      name: "{{ item_known_host.name }}"
      key: "{{ item_known_host.key if(item_known_host.key.split(' ')[0] == item_known_host.name) else item_known_namedkey }}"

  - name: seed-ssh.test|known_hosts|mark end
    run_once: true
    delegate_to: localhost
    ansible.builtin.lineinfile:
      path: "{{ _ssh.known_path }}"
      line:  |-
        # seed-ssh.test '{{ _ssh.name }}' {{ _ssh.mark_comment }} end

      create: true

- block:
  - name: seed-ssh.test|approve|include tasks
    include_tasks: "{{ _ssh.approve_task }}"
    vars:
      ssh: "{{ _ssh }}"

- when: _ssh.config_path | default(None,true) != None
  block:
  - name: seed-ssh.test|config|mark start
    run_once: true
    delegate_to: localhost
    ansible.builtin.lineinfile:
      path: "{{ _ssh.config_path }}"
      line: |-

        # seed-ssh.test '{{ _ssh.name }}' {{ _ssh.mark_comment }} start
      create: true

  - name: seed-ssh.test|config|delete config
    throttle: 1
    delegate_to: localhost
    vars:
      config_host: "{{ inventory_hostname }}.{{ ansible_host }}"
      config_hostname: "{{ ansible_host | default(inventory_hostname,true) }}"
    community.general.ssh_config:
      state: absent
      ssh_config_file: "{{ _ssh.config_path }}"
      host: "{{ config_hostname if(config_hostname == inventory_hostname) else config_host }}"
    ignore_errors: yes

  - name: seed-ssh.test|config|add config
    throttle: 1
    delegate_to: localhost
    vars:
      config_host: "{{ inventory_hostname }}.{{ ansible_host }}"
      config_hostname: "{{ ansible_host | default(inventory_hostname,true) }}"
      config_port: "{{ ansible_port | default('',true) }}"
      config_user: "{{ ansible_user | default('root',true) }}"
    community.general.ssh_config:
      state: present
      ssh_config_file: "{{ _ssh.config_path }}"
      host: "{{ config_hostname if(config_hostname == inventory_hostname) else config_host }}"
      hostname: "{{ config_hostname }}"
      port: "{{ config_port | default(omit,true) }}"
      remote_user: "{{ config_user | default(omit,true) }}"
      identity_file: "{{ _ssh.keypair_path }}"
    ignore_errors: yes

  # replace path for support `~`
  - name: seed-ssh.test|config|replace home path
    throttle: 1
    delegate_to: localhost
    when: _ssh.keypair_path.startswith('~')
    ansible.builtin.replace:
      path: "{{ _ssh.config_path }}"
      after: "# seed-ssh.test '{{ _ssh.name }}' {{ _ssh.mark_comment }} start"
      regexp: "{{ ssh_keypair.filename }}"
      replace: "{{ _ssh.keypair_path }}"

  - name: seed-ssh.test|config|mark end
    run_once: true
    delegate_to: localhost
    ansible.builtin.lineinfile:
      path: "{{ _ssh.config_path }}"
      line: |-
        # seed-ssh.test '{{ _ssh.name }}' {{ _ssh.mark_comment }} end

      create: true

- name: seed-ssh.test|unfact param
  run_once: true
  ansible.builtin.set_fact:
    _ssh: !!null
