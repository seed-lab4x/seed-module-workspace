#!/usr/bin/env -vS ansible-playbook -vvv -K -i ${PWD}/../../test@local/4docker/ansible-inventories
# code: language=ansible
---

- name: test
  hosts: docker
  tasks:

    - name: playbook var|fact workspace
      include_tasks: "{{ workspace.local }}/seed/ansible-tasks/seed-workspace.fact.yml"

    - name: playbook var|fact workpath
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-workpath.fact.yml"
      vars:
        workpath:
          path: "{{ workspace.local }}/playbook_4"


    - name: playbook var|all host|init var|deploy compose
      include_tasks: docker-compose.test.yml
      vars:
        compose:
          name: "test-deploy-{{ inventory_hostname }}-playbook_4"
          path: "{{ workpath.remote.full }}"
          share:
            mounts:
              group: docker
              mode: value
            volumes:
              mode: value
          vars:
            mounts:
              - nfs:
                  src: "localhost:/"
                  opts: "vers=4,loud,rw,sync"
                until:
                  mount_nfs is succeeded
                push:
                  - any: true
                    src: "{{ playbook_dir }}/file/file"
                    dest: "file.push"
            files:
              - dest: "{{ workpath.remote.full }}/.env"
            volumes:
              - name: test-deploy-any-playbook_4
                driver: local
                driver_options:
                  type: nfs
                  device: device=:/
                  o: addr=localhost,rw,nfsvers=4,async
                push:
                  - any: true
                    src: "{{ playbook_dir }}/file/dir"
                    dest: "dir.push"
            networks:
              - name: test-deploy-{{ inventory_hostname }}-playbook_4
                attachable: true
                driver: bridge
                wait:
                  hosts:
                    - host: test-deploy-network-init
                      port: 9000
                  retries: 10
                  delay: 10
            envs:
              - file: .env/all.env
                template: "{{ playbook_dir }}/template/playbook_4.compose.env"
            composes:
              - file: "test-deploy-playbook_4.compose.yml"
                template: "{{ playbook_dir }}/template/playbook_4.compose.yml.j2"
          default:
            files:
              - dest: "{{ workpath.remote.full }}"
            envs:
              - file: test-deploy-playbook_4.compose.env
                content: |
                  TZ=Asia/Hong_Kong
            composes:
              - file: test-deploy-playbook_4.compose.yml
                content: |
                  version: "3.8"
                  services:
                    playbook_4:
                      image: alpine:3.18
                      command: "tail -f /dev/null"

    - name: playbook var|all host|init var|info container
      community.docker.docker_container_info:
        name: "test-deploy-{{ inventory_hostname }}-playbook_4_playbook_4_1"
      register: container_info

    - name: playbook var|all host|init var|assert compose
      ansible.builtin.assert:
        that:
          - container_info.container.Name is contains(inventory_hostname)
          - container_info.container.Name is contains('playbook_4')

    - name: playbook var|all host|init var|remove compose
      community.docker.docker_compose:
        state: absent
        project_name: "test-deploy-{{ inventory_hostname }}-playbook_4"
        project_src: "{{ workpath.remote.full }}"
        files:
          - "test-deploy-playbook_4.compose.yml"
        # remove vol
        remove_volumes: true

    - name: playbook var|all host|init var|remove volume
      community.docker.docker_volume:
        state: absent
        name: test-deploy-any-playbook_4
