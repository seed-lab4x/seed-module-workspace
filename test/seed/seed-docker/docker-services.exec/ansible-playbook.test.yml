#!/usr/bin/env -vS ansible-playbook -vvv -i ${PWD}/../../test@local/4docker/ansible-inventories
# code: language=ansible
---

- name: test
  hosts: docker
  tasks:

    - name: playbook var|index loop|exec services
      include_tasks: docker-services.test.yml
      vars:
        services:
          - name: "test-exec-{{ inventory_hostname }}-playbook_0"
            command: "echo 'exec on {{ inventory_hostname }}'"
            register: service_exec
            append: services_exec
          - name: "test-exec-{{ inventory_hostname }}-playbook_1"
            command: "echo 'exec on {{ inventory_hostname }}'"
            register: service_exec
            append: services_exec

    - name: playbook var|index loop|assert services
      ansible.builtin.assert:
        that:
          - test_include_count | int == 2
          - test_append_result | length == 2
          - test_append_result[0].index == '0'
          - test_append_result[1].index == '1'

    - name: playbook var|index loop|clean test
      ansible.builtin.set_fact:
        test_include_count: 0
        test_append_result: []


    - name: playbook var|value loop|exec services
      include_tasks: docker-services.test.yml
      vars:
        services_share:
          mode: value
          group: docker-34
        services:
          - once: false
            any: false
            name: "test-exec-{{ inventory_hostname }}-playbook_2"
            command: "echo 'exec on {{ inventory_hostname }}'"
            register: service_exec
            append: services_exec
          - once: false
            any: true
            name: "test-exec-any-playbook_3"
            command: "echo 'exec on any'"
            register: service_exec
            append: services_exec
          - once: true
            any: true
            name: "test-exec-any-playbook_4"
            command: "echo 'exec on any'"
            register: service_exec
            append: services_exec

    - name: playbook var|value loop|assert services
      ansible.builtin.assert:
        that:
          - test_include_count | int == (2 + 1 + 1)

    - name: playbook var|value loop|assert services host node3
      when: inventory_hostname == 'node3'
      ansible.builtin.assert:
        that:
          - test_append_result | length == 3
          - test_append_result[0].share.any == false
          - test_append_result[0].param.name is contains('playbook_2')
          - test_append_result[1].share.any == true
          - test_append_result[1].param.name is contains('playbook_3')
          - test_append_result[2].share.any == true
          - test_append_result[2].param.name is contains('playbook_4')

    - name: playbook var|value loop|assert services host node4
      when: inventory_hostname == 'node4'
      ansible.builtin.assert:
        that:
          - test_append_result | length == 2
          - test_append_result[0].share.any == true
          - test_append_result[0].param.name is contains('playbook_3')
          - test_append_result[1].share.any == false
          - test_append_result[1].param.name is contains('playbook_2')

    - name: playbook var|value loop|clean test
      ansible.builtin.set_fact:
        test_include_count: 0
        test_append_result: []
