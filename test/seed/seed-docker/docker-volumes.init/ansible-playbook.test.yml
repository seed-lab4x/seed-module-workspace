#!/usr/bin/env -vS ansible-playbook -vvv -i ${PWD}/../../test@local/4docker/ansible-inventories
# code: language=ansible
---

- name: test
  hosts: docker
  tasks:

    - name: playbook var|index loop|init volumes
      include_tasks: docker-volumes.test.yml
      vars:
        volumes:
          - name: "test-init-{{ inventory_hostname }}-playbook_0"
            labels:
              from: playbook_0
            push:
              - src: "{{ playbook_dir }}/file/file"
                dest: "{{ inventory_hostname }}/test-from-playbook_0/file"
          - group: docker-34
            name: "test-init-{{ inventory_hostname }}-playbook_1"
            driver: local
            labels:
              from: playbook_1
            push:
              - src: "{{ playbook_dir }}/file/file"
                dest: "{{ inventory_hostname }}/test-from-playbook_1/file.copy"
              - src: "{{ playbook_dir }}/file/dir/"
                dest: "{{ inventory_hostname }}/test-from-playbook_2/dir.copy"
              - dest: "{{ inventory_hostname }}/test-from-playbook_3/dir.mkdir"

    - name: playbook var|index loop|assert volumes
      ansible.builtin.assert:
        that:
          - add_result.param | length == 2
          - add_result.param[0].labels.from is contains('playbook_0')
          - add_result.param[1].labels.from is contains('playbook_1')
          - push_result.param | length == 4
          - push_result.param[0].dest is contains('playbook_0')
          - push_result.param[1].dest is contains('playbook_1')
          - push_result.param[2].dest is contains('playbook_2')
          - push_result.param[3].dest is contains('playbook_3')

    - name: playbook var|index loop|clean test
      ansible.builtin.set_fact:
        add_result: !!null
        push_result: !!null


    - name: playbook var|value loop|init volumes
      include_tasks: docker-volumes.test.yml
      vars:
        volumes_share:
          mode: value
          group: docker-34
        volumes:
          - any: true
            name: "test-add-any-playbook_4"
            driver: local
            labels:
              from: playbook_4
            push:
              - any: false
                src: "{{ playbook_dir }}/file/file"
                dest: "{{ inventory_hostname }}/test-from-playbook_4/"
              - any: true
                src: "{{ playbook_dir }}/file/file"
                dest: "any/test-from-playbook_5/"

    - name: playbook var|value loop|assert volumes host node3
      when: inventory_hostname == 'node3'
      ansible.builtin.assert:
        that:
          - add_result.param | length == 1
          - add_result.param[0].labels.from is contains('playbook_4')
          - add_result.param[0].any == true
          - push_result.param | length == 2
          - push_result.share.mode == 'value'
          - push_result.param[0].dest is contains('test-from-playbook_4')
          - push_result.param[0].dest is contains(inventory_hostname)
          - push_result.param[0].any == false
          - push_result.param[1].dest is contains('test-from-playbook_5')
          - push_result.param[1].dest is contains('any')
          - push_result.param[1].any == true

    - name: playbook var|value loop|assert volumes host node4
      when: inventory_hostname == 'node4'
      ansible.builtin.assert:
        that:
          - add_result.param | length == 1
          - add_result.param[0].labels.from is contains('playbook_4')
          - add_result.param[0].any == true
          - push_result.param | length == 2
          - push_result.share.mode == 'value'
          - push_result.param[0].dest is contains('test-from-playbook_4')
          - push_result.param[0].dest is contains(inventory_hostname)
          - push_result.param[0].any == false
          - push_result.param[1].dest is contains('test-from-playbook_5')
          - push_result.param[1].dest is contains('any')
          - push_result.param[1].any == true

    - name: playbook var|value loop|clean test
      ansible.builtin.set_fact:
        add_result: !!null
        push_result: !!null
