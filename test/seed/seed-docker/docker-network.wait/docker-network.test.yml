# code: language=ansible
---

- name: docker-network.test|debug share
  ansible.builtin.debug:
    verbosity: 3
    var: network_share

- vars:
    group: "{{ network_share.group | default('docker',true) }}"
  rescue:

  - name: docker-network.test|rescue wrong group|fail
    when: inventory_hostname in groups[group] | default([],true)
    ansible.builtin.fail:
      msg: "wait network fail. exclude wrong group."

  block:
  - name: docker-network.test|assert defined in group
    ansible.builtin.assert:
      that:
        - inventory_hostname in groups[group] | default([],true)
        - network is defined
      msg: "var eval fail {{ network }}"
      quiet: true

  - name: docker-network.test|fact param
    vars:
      default:
        id: "{{ lookup('community.general.random_string', upper=false, special=false) }}"
    ansible.builtin.set_fact:
      _network: "{{ default | combine(network, recursive=True) }}"

  - vars:
      playbook_path: "{{ network_mkdir.path | default(network_temp.path,true) }}"
    rescue:
    - name: docker-network.test|rescue any other|fail
      when:
        - _network | default(None) != None
      ansible.builtin.fail:
        msg: "wait network '{{ _network.name }}' fail, exclude enable any: '{{ network_share.any | default(false) }}'."

    block:
    - name: docker-network.test|tempfile|mkdir playbook path
      when: workpath.remote.full is undefined
      ansible.builtin.tempfile:
        state: directory
        prefix: seed.docker.network.wait
      register: network_temp

    - name: docker-network.test|workpath|mkdir playbook path
      when: workpath.remote.full is defined
      ansible.builtin.file:
        state: directory
        path: "{{ workpath.remote.full }}/.network/{{ _network.name }}.{{ _network.id }}"
      register: network_mkdir

    - name: docker-network.test|copy playbook file
      vars:
        hosts: "{{ _network.hosts }}"
        content: |
          ---

          - name: wait for on localhost
            hosts: localhost
            connection: local
            tasks:
          {% for host in hosts %}

              - name: docker-network.test|wait for '{{ host.host | default('127.0.0.1',true) }}:{{ host.port | default(host.path,true) }}'
                ansible.builtin.wait_for:
                  {{ host | to_nice_yaml(indent=2) | trim | indent(8) }}
          {% endfor %}
      ansible.builtin.copy:
        content: "{{ content }}"
        dest: "{{ playbook_path }}/ansible-playbook.wait.yml"

    - name: docker-network.test|run async wait container
      community.docker.docker_container:
        state: started
        name: "{{ _network.name }}.{{ _network.id }}"
        detach: false
        entrypoint: ansible-playbook
        image: xiaoyao9184/docker-seed-ansible:latest
        command: "/seed_net/ansible-playbook.wait.yml"
        volumes:
          - "{{ playbook_path }}:/seed_net"
        networks:
          - name: "{{ _network.name }}"
        labels:
          "com.docker.stack.namespace": seed
          "com.github.xiaoyao9184.docker-seed.type": "docker-network.test"
          "com.github.xiaoyao9184.docker-seed.creator": "{{ lookup('ansible.builtin.env', 'SEED_NAME') | default('docker-network.test',true) }}"
      register: wait_container
      async: 2592000
      poll: 0

    - name: docker-network.test|wait timeout delay
      when: _network.delay is defined
      ansible.builtin.wait_for:
        timeout: "{{ _network.delay | default(0,true) }}"

    - name: docker-network.test|status async wait container
      ansible.builtin.async_status:
        jid: "{{ wait_container.ansible_job_id }}"
      register: wait_status
      until:
        - wait_status.finished
        - wait_status.container is defined
        - wait_status.container.State.Status == 'exited'
        - wait_status.container.State.ExitCode == 0
      retries: "{{ _network.retries | default(omit,true) }}"
      delay: "{{ _network.delay | default(omit,true) }}"

    - name: docker-network.test|remove wait container
      community.docker.docker_container:
        state: absent
        name: "{{ _network.name }}.{{ _network.id }}"
        keep_volumes: false

    - name: docker-network.test|remove playbook file
      ansible.builtin.file:
        state: absent
        path: "{{ playbook_path }}/ansible-playbook.wait.yml"

    - name: docker-network.test|unfact param
      run_once: "{{ network_share.any | default(false) }}"
      ansible.builtin.set_fact:
        _network: !!null
